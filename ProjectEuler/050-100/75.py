from math import sqrtdef gcd(a,b):  while b != 0: a,b = b,a%b  return a    h = {}# better algo# 161667 L = 15*(10**5)for m in range(2,int(sqrt(L/2-1))+1):  for n in range(1,m):    if (m-n)%2 != 0 and gcd(m,n) == 1:      """      k = 1      while True:        a = k*(m**2 - n**2)        b = k*(2*m*n)        c = k*(m**2 + n**2)        s = a+b+c        if s > L: break        h[s] = h[s]+1 if s in h else 1        k += 1        """      s = 2*m*(m+n)      p = s      while p <= L:         h[p] = h[p]+1 if p in h else 1        p += sprint len(h)print len([v for v in h.values() if v == 1])        """L = 15*(10**3)h = {}a = 1while 3*a < L:  b = a  L1 = L-a  while 2*b < L1:    c = sqrt(a**2 + b**2)    k = b+c    if k > L1: break    if k == int(k):       k = int(k)+a      h[k] = h[k]+1 if k in h else 1    b += 1  a += 1    print len([v for v in h.values() if v == 1])"""      